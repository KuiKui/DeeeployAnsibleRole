---
- shell: date +"%Y%m%d%H%M%S"
  register: version
- stat: path={{ deeeploy_project_path }}/current
  register: current_release
- file: state=touch
        path={{ deeeploy_project_path }}/current/VERSION
  when: current_release.stat.exists
- command: chdir={{ deeeploy_project_path }}/current cat VERSION
  register: old_commit
  when: current_release.stat.exists
- name: Commit déployé de la dernière release
  debug: var=old_commit.stdout_lines
  when: current_release.stat.exists
- command: git clone -b {{ deeeploy_branch }} --depth {{ deeeploy_clone_depth }} {{ deeeploy_repo_url }} {{ deeeploy_project_path }}/releases/{{ version.stdout }}
- shell: chdir={{ deeeploy_project_path }}/releases/{{ version.stdout }} git rev-parse HEAD > VERSION
- shell: chdir={{ deeeploy_project_path }}/releases/{{ version.stdout }} curl -sS https://getcomposer.org/installer | {{ deeeploy_php_bin }}
  tags:
    - composer
- name: Installation des vendors
  command: chdir={{ deeeploy_project_path }}/releases/{{ version.stdout }} {{ deeeploy_php_bin }} composer.phar install --prefer-dist --no-dev --optimize-autoloader --no-interaction --no-scripts --no-progress
  tags:
    - composer
- name: Copie des fichiers de config
  template: src=../{{ item }}.dist dest={{ deeeploy_project_path }}/releases/{{ version.stdout }}/{{ item }}
  with_items: deeeploy_config_files
- file: state=absent
        path={{ deeeploy_project_path }}/releases/{{ version.stdout }}/{{ item }}
  with_items: deeeploy_shared_files
- name: Symlink des fichiers partagés
  file: state=link
        src={{ deeeploy_project_path }}/shared/{{ item }}
        dest={{ deeeploy_project_path }}/releases/{{ version.stdout }}/{{ item }}
  with_items: deeeploy_shared_files
- command: chdir={{ deeeploy_project_path }}/releases/{{ version.stdout }} cat VERSION
  register: new_commit
- shell: chdir={{ deeeploy_project_path }}/releases/{{ version.stdout }} git --no-pager log --no-merges --oneline {{ old_commit.stdout }}...{{ new_commit.stdout }}
  register: changelog
  when: deeeploy_newrelic_token is defined
- name: Suppression des fichiers inutiles
  file: state=absent
        path={{ deeeploy_project_path }}/releases/{{ version.stdout }}/{{ item }}
  with_items: deeeploy_clean_files
- name: Création du symlink
  file: state=link
        src={{ deeeploy_project_path }}/releases/{{ version.stdout }}
        dest={{ deeeploy_project_path }}/current
        force=yes
- newrelic_deployment: token={{ deeeploy_newrelic_token }}
                       application_id={{ deeeploy_newrelic_app_id }}
                       user='ansible deployment'
                       revision={{ new_commit.stdout }}
                       changelog="{{ changelog.stdout }}"
  when: deeeploy_newrelic_token is defined
- command: echo "{{ deeeploy_app_name }}.deployment 1 `date +%s`" | nc -u {{ deeeploy_graphite_host }} {{ deeeploy_graphite_port }}
  when: deeeploy_graphite_host is defined
